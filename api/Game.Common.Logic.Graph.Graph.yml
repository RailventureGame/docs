### YamlMime:ManagedReference
items:
- uid: Game.Common.Logic.Graph.Graph
  commentId: T:Game.Common.Logic.Graph.Graph
  id: Graph
  parent: Game.Common.Logic.Graph
  children:
  - Game.Common.Logic.Graph.Graph.#ctor
  - Game.Common.Logic.Graph.Graph.AddEdge(Game.Common.Logic.Graph.Edge)
  - Game.Common.Logic.Graph.Graph.AddNode(Game.Common.Logic.Graph.Node)
  - Game.Common.Logic.Graph.Graph.GetNeighbors(Game.Common.Logic.Graph.Node)
  - Game.Common.Logic.Graph.Graph.GetNodes
  - Game.Common.Logic.Graph.Graph.RemoveEdge(Game.Common.Logic.Graph.Edge)
  - Game.Common.Logic.Graph.Graph.RemoveNode(Game.Common.Logic.Graph.Node)
  langs:
  - csharp
  - vb
  name: Graph
  nameWithType: Graph
  fullName: Game.Common.Logic.Graph.Graph
  type: Class
  source:
    remote:
      path: Common/Logic/Graph/Graph.cs
      branch: main
      repo: https://github.com/RailventureGame/game
    id: Graph
    path: ../Game/Common/Logic/Graph/Graph.cs
    startLine: 7
  assemblies:
  - Railventure
  namespace: Game.Common.Logic.Graph
  summary: A graph containing nodes and edges.
  example: []
  syntax:
    content: public class Graph
    content.vb: Public Class Graph
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Game.Common.Logic.Graph.Graph.#ctor
  commentId: M:Game.Common.Logic.Graph.Graph.#ctor
  id: '#ctor'
  parent: Game.Common.Logic.Graph.Graph
  langs:
  - csharp
  - vb
  name: Graph()
  nameWithType: Graph.Graph()
  fullName: Game.Common.Logic.Graph.Graph.Graph()
  type: Constructor
  source:
    remote:
      path: Common/Logic/Graph/Graph.cs
      branch: main
      repo: https://github.com/RailventureGame/game
    id: .ctor
    path: ../Game/Common/Logic/Graph/Graph.cs
    startLine: 17
  assemblies:
  - Railventure
  namespace: Game.Common.Logic.Graph
  summary: Creates an emtpy graph.
  example: []
  syntax:
    content: public Graph()
    content.vb: Public Sub New()
  overload: Game.Common.Logic.Graph.Graph.#ctor*
  nameWithType.vb: Graph.New()
  fullName.vb: Game.Common.Logic.Graph.Graph.New()
  name.vb: New()
- uid: Game.Common.Logic.Graph.Graph.AddNode(Game.Common.Logic.Graph.Node)
  commentId: M:Game.Common.Logic.Graph.Graph.AddNode(Game.Common.Logic.Graph.Node)
  id: AddNode(Game.Common.Logic.Graph.Node)
  parent: Game.Common.Logic.Graph.Graph
  langs:
  - csharp
  - vb
  name: AddNode(Node)
  nameWithType: Graph.AddNode(Node)
  fullName: Game.Common.Logic.Graph.Graph.AddNode(Game.Common.Logic.Graph.Node)
  type: Method
  source:
    remote:
      path: Common/Logic/Graph/Graph.cs
      branch: main
      repo: https://github.com/RailventureGame/game
    id: AddNode
    path: ../Game/Common/Logic/Graph/Graph.cs
    startLine: 28
  assemblies:
  - Railventure
  namespace: Game.Common.Logic.Graph
  summary: Adds a node to the graph.
  example: []
  syntax:
    content: public bool AddNode(Node n)
    parameters:
    - id: n
      type: Game.Common.Logic.Graph.Node
      description: the node to be added to the graph
    return:
      type: System.Boolean
      description: true if the graph was modified, false otherwise
    content.vb: Public Function AddNode(n As Node) As Boolean
  overload: Game.Common.Logic.Graph.Graph.AddNode*
- uid: Game.Common.Logic.Graph.Graph.RemoveNode(Game.Common.Logic.Graph.Node)
  commentId: M:Game.Common.Logic.Graph.Graph.RemoveNode(Game.Common.Logic.Graph.Node)
  id: RemoveNode(Game.Common.Logic.Graph.Node)
  parent: Game.Common.Logic.Graph.Graph
  langs:
  - csharp
  - vb
  name: RemoveNode(Node)
  nameWithType: Graph.RemoveNode(Node)
  fullName: Game.Common.Logic.Graph.Graph.RemoveNode(Game.Common.Logic.Graph.Node)
  type: Method
  source:
    remote:
      path: Common/Logic/Graph/Graph.cs
      branch: main
      repo: https://github.com/RailventureGame/game
    id: RemoveNode
    path: ../Game/Common/Logic/Graph/Graph.cs
    startLine: 43
  assemblies:
  - Railventure
  namespace: Game.Common.Logic.Graph
  summary: Ensures the specified node is not part of the graph.
  example: []
  syntax:
    content: public bool RemoveNode(Node n)
    parameters:
    - id: n
      type: Game.Common.Logic.Graph.Node
      description: the node to be removed from the graph
    return:
      type: System.Boolean
      description: true if the graph was modified, false otherwise
    content.vb: Public Function RemoveNode(n As Node) As Boolean
  overload: Game.Common.Logic.Graph.Graph.RemoveNode*
- uid: Game.Common.Logic.Graph.Graph.AddEdge(Game.Common.Logic.Graph.Edge)
  commentId: M:Game.Common.Logic.Graph.Graph.AddEdge(Game.Common.Logic.Graph.Edge)
  id: AddEdge(Game.Common.Logic.Graph.Edge)
  parent: Game.Common.Logic.Graph.Graph
  langs:
  - csharp
  - vb
  name: AddEdge(Edge)
  nameWithType: Graph.AddEdge(Edge)
  fullName: Game.Common.Logic.Graph.Graph.AddEdge(Game.Common.Logic.Graph.Edge)
  type: Method
  source:
    remote:
      path: Common/Logic/Graph/Graph.cs
      branch: main
      repo: https://github.com/RailventureGame/game
    id: AddEdge
    path: ../Game/Common/Logic/Graph/Graph.cs
    startLine: 60
  assemblies:
  - Railventure
  namespace: Game.Common.Logic.Graph
  summary: Adds an edge (and if not already added also its nodes) to the graph
  example: []
  syntax:
    content: public bool AddEdge(Edge e)
    parameters:
    - id: e
      type: Game.Common.Logic.Graph.Edge
      description: the edge to be added to the graph
    return:
      type: System.Boolean
      description: true if the graph was modified, false otherwise
    content.vb: Public Function AddEdge(e As Edge) As Boolean
  overload: Game.Common.Logic.Graph.Graph.AddEdge*
- uid: Game.Common.Logic.Graph.Graph.RemoveEdge(Game.Common.Logic.Graph.Edge)
  commentId: M:Game.Common.Logic.Graph.Graph.RemoveEdge(Game.Common.Logic.Graph.Edge)
  id: RemoveEdge(Game.Common.Logic.Graph.Edge)
  parent: Game.Common.Logic.Graph.Graph
  langs:
  - csharp
  - vb
  name: RemoveEdge(Edge)
  nameWithType: Graph.RemoveEdge(Edge)
  fullName: Game.Common.Logic.Graph.Graph.RemoveEdge(Game.Common.Logic.Graph.Edge)
  type: Method
  source:
    remote:
      path: Common/Logic/Graph/Graph.cs
      branch: main
      repo: https://github.com/RailventureGame/game
    id: RemoveEdge
    path: ../Game/Common/Logic/Graph/Graph.cs
    startLine: 78
  assemblies:
  - Railventure
  namespace: Game.Common.Logic.Graph
  summary: Ensures the specified edge is not part of the graph.
  example: []
  syntax:
    content: public bool RemoveEdge(Edge e)
    parameters:
    - id: e
      type: Game.Common.Logic.Graph.Edge
      description: the edge to be removed from the graph
    return:
      type: System.Boolean
      description: true if the graph was modified, false otherwise
    content.vb: Public Function RemoveEdge(e As Edge) As Boolean
  overload: Game.Common.Logic.Graph.Graph.RemoveEdge*
- uid: Game.Common.Logic.Graph.Graph.GetNodes
  commentId: M:Game.Common.Logic.Graph.Graph.GetNodes
  id: GetNodes
  parent: Game.Common.Logic.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetNodes()
  nameWithType: Graph.GetNodes()
  fullName: Game.Common.Logic.Graph.Graph.GetNodes()
  type: Method
  source:
    remote:
      path: Common/Logic/Graph/Graph.cs
      branch: main
      repo: https://github.com/RailventureGame/game
    id: GetNodes
    path: ../Game/Common/Logic/Graph/Graph.cs
    startLine: 92
  assemblies:
  - Railventure
  namespace: Game.Common.Logic.Graph
  summary: Gets the graphs nodes.
  example: []
  syntax:
    content: public ReadOnlyCollection<Node> GetNodes()
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Game.Common.Logic.Graph.Node}
      description: a readonly collection containing the graphs nodes
    content.vb: Public Function GetNodes() As ReadOnlyCollection(Of Node)
  overload: Game.Common.Logic.Graph.Graph.GetNodes*
- uid: Game.Common.Logic.Graph.Graph.GetNeighbors(Game.Common.Logic.Graph.Node)
  commentId: M:Game.Common.Logic.Graph.Graph.GetNeighbors(Game.Common.Logic.Graph.Node)
  id: GetNeighbors(Game.Common.Logic.Graph.Node)
  parent: Game.Common.Logic.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetNeighbors(Node)
  nameWithType: Graph.GetNeighbors(Node)
  fullName: Game.Common.Logic.Graph.Graph.GetNeighbors(Game.Common.Logic.Graph.Node)
  type: Method
  source:
    remote:
      path: Common/Logic/Graph/Graph.cs
      branch: main
      repo: https://github.com/RailventureGame/game
    id: GetNeighbors
    path: ../Game/Common/Logic/Graph/Graph.cs
    startLine: 102
  assemblies:
  - Railventure
  namespace: Game.Common.Logic.Graph
  summary: Gets the neighbor edges of a node.
  example: []
  syntax:
    content: public ReadOnlyCollection<Edge>? GetNeighbors(Node n)
    parameters:
    - id: n
      type: Game.Common.Logic.Graph.Node
      description: the node to get the edges from
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Game.Common.Logic.Graph.Edge}
      description: a readonly collection of the nodes edges
    content.vb: Public Function GetNeighbors(n As Node) As ReadOnlyCollection(Of Edge)
  overload: Game.Common.Logic.Graph.Graph.GetNeighbors*
references:
- uid: Game.Common.Logic.Graph
  commentId: N:Game.Common.Logic.Graph
  href: Game.html
  name: Game.Common.Logic.Graph
  nameWithType: Game.Common.Logic.Graph
  fullName: Game.Common.Logic.Graph
  spec.csharp:
  - uid: Game
    name: Game
    href: Game.html
  - name: .
  - uid: Game.Common
    name: Common
    href: Game.Common.html
  - name: .
  - uid: Game.Common.Logic
    name: Logic
    href: Game.Common.Logic.html
  - name: .
  - uid: Game.Common.Logic.Graph
    name: Graph
    href: Game.Common.Logic.Graph.html
  spec.vb:
  - uid: Game
    name: Game
    href: Game.html
  - name: .
  - uid: Game.Common
    name: Common
    href: Game.Common.html
  - name: .
  - uid: Game.Common.Logic
    name: Logic
    href: Game.Common.Logic.html
  - name: .
  - uid: Game.Common.Logic.Graph
    name: Graph
    href: Game.Common.Logic.Graph.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Game.Common.Logic.Graph.Graph.#ctor*
  commentId: Overload:Game.Common.Logic.Graph.Graph.#ctor
  href: Game.Common.Logic.Graph.Graph.html#Game_Common_Logic_Graph_Graph__ctor
  name: Graph
  nameWithType: Graph.Graph
  fullName: Game.Common.Logic.Graph.Graph.Graph
  nameWithType.vb: Graph.New
  fullName.vb: Game.Common.Logic.Graph.Graph.New
  name.vb: New
- uid: Game.Common.Logic.Graph.Graph.AddNode*
  commentId: Overload:Game.Common.Logic.Graph.Graph.AddNode
  href: Game.Common.Logic.Graph.Graph.html#Game_Common_Logic_Graph_Graph_AddNode_Game_Common_Logic_Graph_Node_
  name: AddNode
  nameWithType: Graph.AddNode
  fullName: Game.Common.Logic.Graph.Graph.AddNode
- uid: Game.Common.Logic.Graph.Node
  commentId: T:Game.Common.Logic.Graph.Node
  parent: Game.Common.Logic.Graph
  href: Game.Common.Logic.Graph.Node.html
  name: Node
  nameWithType: Node
  fullName: Game.Common.Logic.Graph.Node
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Game.Common.Logic.Graph.Graph.RemoveNode*
  commentId: Overload:Game.Common.Logic.Graph.Graph.RemoveNode
  href: Game.Common.Logic.Graph.Graph.html#Game_Common_Logic_Graph_Graph_RemoveNode_Game_Common_Logic_Graph_Node_
  name: RemoveNode
  nameWithType: Graph.RemoveNode
  fullName: Game.Common.Logic.Graph.Graph.RemoveNode
- uid: Game.Common.Logic.Graph.Graph.AddEdge*
  commentId: Overload:Game.Common.Logic.Graph.Graph.AddEdge
  href: Game.Common.Logic.Graph.Graph.html#Game_Common_Logic_Graph_Graph_AddEdge_Game_Common_Logic_Graph_Edge_
  name: AddEdge
  nameWithType: Graph.AddEdge
  fullName: Game.Common.Logic.Graph.Graph.AddEdge
- uid: Game.Common.Logic.Graph.Edge
  commentId: T:Game.Common.Logic.Graph.Edge
  parent: Game.Common.Logic.Graph
  href: Game.Common.Logic.Graph.Edge.html
  name: Edge
  nameWithType: Edge
  fullName: Game.Common.Logic.Graph.Edge
- uid: Game.Common.Logic.Graph.Graph.RemoveEdge*
  commentId: Overload:Game.Common.Logic.Graph.Graph.RemoveEdge
  href: Game.Common.Logic.Graph.Graph.html#Game_Common_Logic_Graph_Graph_RemoveEdge_Game_Common_Logic_Graph_Edge_
  name: RemoveEdge
  nameWithType: Graph.RemoveEdge
  fullName: Game.Common.Logic.Graph.Graph.RemoveEdge
- uid: Game.Common.Logic.Graph.Graph.GetNodes*
  commentId: Overload:Game.Common.Logic.Graph.Graph.GetNodes
  href: Game.Common.Logic.Graph.Graph.html#Game_Common_Logic_Graph_Graph_GetNodes
  name: GetNodes
  nameWithType: Graph.GetNodes
  fullName: Game.Common.Logic.Graph.Graph.GetNodes
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Game.Common.Logic.Graph.Node}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Game.Common.Logic.Graph.Node}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<Node>
  nameWithType: ReadOnlyCollection<Node>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Game.Common.Logic.Graph.Node>
  nameWithType.vb: ReadOnlyCollection(Of Node)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Game.Common.Logic.Graph.Node)
  name.vb: ReadOnlyCollection(Of Node)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: Game.Common.Logic.Graph.Node
    name: Node
    href: Game.Common.Logic.Graph.Node.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Game.Common.Logic.Graph.Node
    name: Node
    href: Game.Common.Logic.Graph.Node.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: Game.Common.Logic.Graph.Graph.GetNeighbors*
  commentId: Overload:Game.Common.Logic.Graph.Graph.GetNeighbors
  href: Game.Common.Logic.Graph.Graph.html#Game_Common_Logic_Graph_Graph_GetNeighbors_Game_Common_Logic_Graph_Node_
  name: GetNeighbors
  nameWithType: Graph.GetNeighbors
  fullName: Game.Common.Logic.Graph.Graph.GetNeighbors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Game.Common.Logic.Graph.Edge}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Game.Common.Logic.Graph.Edge}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<Edge>
  nameWithType: ReadOnlyCollection<Edge>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Game.Common.Logic.Graph.Edge>
  nameWithType.vb: ReadOnlyCollection(Of Edge)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Game.Common.Logic.Graph.Edge)
  name.vb: ReadOnlyCollection(Of Edge)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: Game.Common.Logic.Graph.Edge
    name: Edge
    href: Game.Common.Logic.Graph.Edge.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Game.Common.Logic.Graph.Edge
    name: Edge
    href: Game.Common.Logic.Graph.Edge.html
  - name: )
